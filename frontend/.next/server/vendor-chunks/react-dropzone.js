"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-dropzone";
exports.ids = ["vendor-chunks/react-dropzone"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-dropzone/dist/es/index.js":
/*!******************************************************!*\
  !*** ./node_modules/react-dropzone/dist/es/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorCode: () => (/* reexport safe */ _utils_index_js__WEBPACK_IMPORTED_MODULE_2__.ErrorCode),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useDropzone: () => (/* binding */ useDropzone)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\n/* harmony import */ var file_selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! file-selector */ \"(ssr)/./node_modules/file-selector/dist/index.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/index.js */ \"(ssr)/./node_modules/react-dropzone/dist/es/utils/index.js\");\nvar _excluded = [\"children\"],\r\n    _excluded2 = [\"open\"],\r\n    _excluded3 = [\"refKey\", \"role\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onClick\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDrop\"],\r\n    _excluded4 = [\"refKey\", \"onChange\", \"onClick\"];\r\n\r\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\r\n\r\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\r\n\r\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\n/* eslint prefer-template: 0 */\r\n\r\n\r\n\r\n\r\n/**\r\n * Convenience wrapper component for the `useDropzone` hook\r\n *\r\n * ```jsx\r\n * <Dropzone>\r\n *   {({getRootProps, getInputProps}) => (\r\n *     <div {...getRootProps()}>\r\n *       <input {...getInputProps()} />\r\n *       <p>Drag 'n' drop some files here, or click to select files</p>\r\n *     </div>\r\n *   )}\r\n * </Dropzone>\r\n * ```\r\n */\r\n\r\nvar Dropzone = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (_ref, ref) {\r\n  var children = _ref.children,\r\n      params = _objectWithoutProperties(_ref, _excluded);\r\n\r\n  var _useDropzone = useDropzone(params),\r\n      open = _useDropzone.open,\r\n      props = _objectWithoutProperties(_useDropzone, _excluded2);\r\n\r\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, function () {\r\n    return {\r\n      open: open\r\n    };\r\n  }, [open]); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element\r\n\r\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children(_objectSpread(_objectSpread({}, props), {}, {\r\n    open: open\r\n  })));\r\n});\r\nDropzone.displayName = \"Dropzone\"; // Add default props for react-docgen\r\n\r\nvar defaultProps = {\r\n  disabled: false,\r\n  getFilesFromEvent: file_selector__WEBPACK_IMPORTED_MODULE_1__.fromEvent,\r\n  maxSize: Infinity,\r\n  minSize: 0,\r\n  multiple: true,\r\n  maxFiles: 0,\r\n  preventDropOnDocument: true,\r\n  noClick: false,\r\n  noKeyboard: false,\r\n  noDrag: false,\r\n  noDragEventsBubbling: false,\r\n  validator: null,\r\n  useFsAccessApi: false,\r\n  autoFocus: false\r\n};\r\nDropzone.defaultProps = defaultProps;\r\nDropzone.propTypes = {\r\n  /**\r\n   * Render function that exposes the dropzone state and prop getter fns\r\n   *\r\n   * @param {object} params\r\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\r\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\r\n   * @param {Function} params.open Open the native file selection dialog\r\n   * @param {boolean} params.isFocused Dropzone area is in focus\r\n   * @param {boolean} params.isFileDialogActive File dialog is opened\r\n   * @param {boolean} params.isDragActive Active drag is in progress\r\n   * @param {boolean} params.isDragAccept Dragged files are accepted\r\n   * @param {boolean} params.isDragReject Some dragged files are rejected\r\n   * @param {File[]} params.acceptedFiles Accepted files\r\n   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected\r\n   */\r\n  children: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Set accepted file types.\r\n   * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.\r\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\r\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\r\n   * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).\r\n   */\r\n  accept: prop_types__WEBPACK_IMPORTED_MODULE_3__.objectOf(prop_types__WEBPACK_IMPORTED_MODULE_3__.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_3__.string)),\r\n\r\n  /**\r\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\r\n   */\r\n  multiple: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\r\n\r\n  /**\r\n   * If false, allow dropped items to take over the current browser window\r\n   */\r\n  preventDropOnDocument: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\r\n\r\n  /**\r\n   * If true, disables click to open the native file selection dialog\r\n   */\r\n  noClick: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\r\n\r\n  /**\r\n   * If true, disables SPACE/ENTER to open the native file selection dialog.\r\n   * Note that it also stops tracking the focus state.\r\n   */\r\n  noKeyboard: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\r\n\r\n  /**\r\n   * If true, disables drag 'n' drop\r\n   */\r\n  noDrag: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\r\n\r\n  /**\r\n   * If true, stops drag event propagation to parents\r\n   */\r\n  noDragEventsBubbling: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\r\n\r\n  /**\r\n   * Minimum file size (in bytes)\r\n   */\r\n  minSize: prop_types__WEBPACK_IMPORTED_MODULE_3__.number,\r\n\r\n  /**\r\n   * Maximum file size (in bytes)\r\n   */\r\n  maxSize: prop_types__WEBPACK_IMPORTED_MODULE_3__.number,\r\n\r\n  /**\r\n   * Maximum accepted number of files\r\n   * The default value is 0 which means there is no limitation to how many files are accepted.\r\n   */\r\n  maxFiles: prop_types__WEBPACK_IMPORTED_MODULE_3__.number,\r\n\r\n  /**\r\n   * Enable/disable the dropzone\r\n   */\r\n  disabled: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\r\n\r\n  /**\r\n   * Use this to provide a custom file aggregator\r\n   *\r\n   * @param {(DragEvent|Event|Array<FileSystemFileHandle>)} event A drag event or input change event (if files were selected via the file dialog)\r\n   */\r\n  getFilesFromEvent: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Cb for when closing the file dialog with no selection\r\n   */\r\n  onFileDialogCancel: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Cb for when opening the file dialog\r\n   */\r\n  onFileDialogOpen: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\r\n   * to open the file picker instead of using an `<input type=\"file\">` click event.\r\n   */\r\n  useFsAccessApi: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\r\n\r\n  /**\r\n   * Set to true to focus the root element on render\r\n   */\r\n  autoFocus: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\r\n\r\n  /**\r\n   * Cb for when the `dragenter` event occurs.\r\n   *\r\n   * @param {DragEvent} event\r\n   */\r\n  onDragEnter: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Cb for when the `dragleave` event occurs\r\n   *\r\n   * @param {DragEvent} event\r\n   */\r\n  onDragLeave: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Cb for when the `dragover` event occurs\r\n   *\r\n   * @param {DragEvent} event\r\n   */\r\n  onDragOver: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Cb for when the `drop` event occurs.\r\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\r\n   *\r\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\r\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\r\n   * If `multiple` is set to false and additional files are dropped,\r\n   * all files besides the first will be rejected.\r\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\r\n   *\r\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\r\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\r\n   *\r\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\r\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\r\n   *\r\n   * ```js\r\n   * function onDrop(acceptedFiles) {\r\n   *   const req = request.post('/upload')\r\n   *   acceptedFiles.forEach(file => {\r\n   *     req.attach(file.name, file)\r\n   *   })\r\n   *   req.end(callback)\r\n   * }\r\n   * ```\r\n   *\r\n   * @param {File[]} acceptedFiles\r\n   * @param {FileRejection[]} fileRejections\r\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n   */\r\n  onDrop: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Cb for when the `drop` event occurs.\r\n   * Note that if no files are accepted, this callback is not invoked.\r\n   *\r\n   * @param {File[]} files\r\n   * @param {(DragEvent|Event)} event\r\n   */\r\n  onDropAccepted: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Cb for when the `drop` event occurs.\r\n   * Note that if no files are rejected, this callback is not invoked.\r\n   *\r\n   * @param {FileRejection[]} fileRejections\r\n   * @param {(DragEvent|Event)} event\r\n   */\r\n  onDropRejected: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Cb for when there's some error from any of the promises.\r\n   *\r\n   * @param {Error} error\r\n   */\r\n  onError: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\r\n\r\n  /**\r\n   * Custom validation function. It must return null if there's no errors.\r\n   * @param {File} file\r\n   * @returns {FileError|FileError[]|null}\r\n   */\r\n  validator: prop_types__WEBPACK_IMPORTED_MODULE_3__.func\r\n};\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dropzone);\r\n/**\r\n * A function that is invoked for the `dragenter`,\r\n * `dragover` and `dragleave` events.\r\n * It is not invoked if the items are not files (such as link, text, etc.).\r\n *\r\n * @callback dragCb\r\n * @param {DragEvent} event\r\n */\r\n\r\n/**\r\n * A function that is invoked for the `drop` or input change event.\r\n * It is not invoked if the items are not files (such as link, text, etc.).\r\n *\r\n * @callback dropCb\r\n * @param {File[]} acceptedFiles List of accepted files\r\n * @param {FileRejection[]} fileRejections List of rejected files and why they were rejected\r\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n */\r\n\r\n/**\r\n * A function that is invoked for the `drop` or input change event.\r\n * It is not invoked if the items are files (such as link, text, etc.).\r\n *\r\n * @callback dropAcceptedCb\r\n * @param {File[]} files List of accepted files that meet the given criteria\r\n * (`accept`, `multiple`, `minSize`, `maxSize`)\r\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n */\r\n\r\n/**\r\n * A function that is invoked for the `drop` or input change event.\r\n *\r\n * @callback dropRejectedCb\r\n * @param {File[]} files List of rejected files that do not meet the given criteria\r\n * (`accept`, `multiple`, `minSize`, `maxSize`)\r\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\r\n */\r\n\r\n/**\r\n * A function that is used aggregate files,\r\n * in a asynchronous fashion, from drag or input change events.\r\n *\r\n * @callback getFilesFromEvent\r\n * @param {(DragEvent|Event|Array<FileSystemFileHandle>)} event A drag event or input change event (if files were selected via the file dialog)\r\n * @returns {(File[]|Promise<File[]>)}\r\n */\r\n\r\n/**\r\n * An object with the current dropzone state.\r\n *\r\n * @typedef {object} DropzoneState\r\n * @property {boolean} isFocused Dropzone area is in focus\r\n * @property {boolean} isFileDialogActive File dialog is opened\r\n * @property {boolean} isDragActive Active drag is in progress\r\n * @property {boolean} isDragAccept Dragged files are accepted\r\n * @property {boolean} isDragReject Some dragged files are rejected\r\n * @property {File[]} acceptedFiles Accepted files\r\n * @property {FileRejection[]} fileRejections Rejected files and why they were rejected\r\n */\r\n\r\n/**\r\n * An object with the dropzone methods.\r\n *\r\n * @typedef {object} DropzoneMethods\r\n * @property {Function} getRootProps Returns the props you should apply to the root drop container you render\r\n * @property {Function} getInputProps Returns the props you should apply to hidden file input you render\r\n * @property {Function} open Open the native file selection dialog\r\n */\r\n\r\nvar initialState = {\r\n  isFocused: false,\r\n  isFileDialogActive: false,\r\n  isDragActive: false,\r\n  isDragAccept: false,\r\n  isDragReject: false,\r\n  acceptedFiles: [],\r\n  fileRejections: []\r\n};\r\n/**\r\n * A React hook that creates a drag 'n' drop area.\r\n *\r\n * ```jsx\r\n * function MyDropzone(props) {\r\n *   const {getRootProps, getInputProps} = useDropzone({\r\n *     onDrop: acceptedFiles => {\r\n *       // do something with the File objects, e.g. upload to some server\r\n *     }\r\n *   });\r\n *   return (\r\n *     <div {...getRootProps()}>\r\n *       <input {...getInputProps()} />\r\n *       <p>Drag and drop some files here, or click to select files</p>\r\n *     </div>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @function useDropzone\r\n *\r\n * @param {object} props\r\n * @param {import(\"./utils\").AcceptProp} [props.accept] Set accepted file types.\r\n * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.\r\n * Keep in mind that mime type determination is not reliable across platforms. CSV files,\r\n * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\r\n * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).\r\n * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files\r\n * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window\r\n * @param {boolean} [props.noClick=false] If true, disables click to open the native file selection dialog\r\n * @param {boolean} [props.noKeyboard=false] If true, disables SPACE/ENTER to open the native file selection dialog.\r\n * Note that it also stops tracking the focus state.\r\n * @param {boolean} [props.noDrag=false] If true, disables drag 'n' drop\r\n * @param {boolean} [props.noDragEventsBubbling=false] If true, stops drag event propagation to parents\r\n * @param {number} [props.minSize=0] Minimum file size (in bytes)\r\n * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)\r\n * @param {boolean} [props.disabled=false] Enable/disable the dropzone\r\n * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator\r\n * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection\r\n * @param {boolean} [props.useFsAccessApi] Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\r\n * to open the file picker instead of using an `<input type=\"file\">` click event.\r\n * @param {boolean} autoFocus Set to true to auto focus the root element.\r\n * @param {Function} [props.onFileDialogOpen] Cb for when opening the file dialog\r\n * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.\r\n * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs\r\n * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs\r\n * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.\r\n * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\r\n *\r\n * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\r\n * `accept` must be an object with keys as a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) and the value an array of file extensions (optional).\r\n * If `multiple` is set to false and additional files are dropped,\r\n * all files besides the first will be rejected.\r\n * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\r\n *\r\n * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\r\n * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\r\n *\r\n * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\r\n * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\r\n *\r\n * ```js\r\n * function onDrop(acceptedFiles) {\r\n *   const req = request.post('/upload')\r\n *   acceptedFiles.forEach(file => {\r\n *     req.attach(file.name, file)\r\n *   })\r\n *   req.end(callback)\r\n * }\r\n * ```\r\n * @param {dropAcceptedCb} [props.onDropAccepted]\r\n * @param {dropRejectedCb} [props.onDropRejected]\r\n * @param {(error: Error) => void} [props.onError]\r\n *\r\n * @returns {DropzoneState & DropzoneMethods}\r\n */\r\n\r\nfunction useDropzone() {\r\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n  var _defaultProps$props = _objectSpread(_objectSpread({}, defaultProps), props),\r\n      accept = _defaultProps$props.accept,\r\n      disabled = _defaultProps$props.disabled,\r\n      getFilesFromEvent = _defaultProps$props.getFilesFromEvent,\r\n      maxSize = _defaultProps$props.maxSize,\r\n      minSize = _defaultProps$props.minSize,\r\n      multiple = _defaultProps$props.multiple,\r\n      maxFiles = _defaultProps$props.maxFiles,\r\n      onDragEnter = _defaultProps$props.onDragEnter,\r\n      onDragLeave = _defaultProps$props.onDragLeave,\r\n      onDragOver = _defaultProps$props.onDragOver,\r\n      onDrop = _defaultProps$props.onDrop,\r\n      onDropAccepted = _defaultProps$props.onDropAccepted,\r\n      onDropRejected = _defaultProps$props.onDropRejected,\r\n      onFileDialogCancel = _defaultProps$props.onFileDialogCancel,\r\n      onFileDialogOpen = _defaultProps$props.onFileDialogOpen,\r\n      useFsAccessApi = _defaultProps$props.useFsAccessApi,\r\n      autoFocus = _defaultProps$props.autoFocus,\r\n      preventDropOnDocument = _defaultProps$props.preventDropOnDocument,\r\n      noClick = _defaultProps$props.noClick,\r\n      noKeyboard = _defaultProps$props.noKeyboard,\r\n      noDrag = _defaultProps$props.noDrag,\r\n      noDragEventsBubbling = _defaultProps$props.noDragEventsBubbling,\r\n      onError = _defaultProps$props.onError,\r\n      validator = _defaultProps$props.validator;\r\n\r\n  var acceptAttr = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\r\n    return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.acceptPropAsAcceptAttr)(accept);\r\n  }, [accept]);\r\n  var pickerTypes = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\r\n    return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.pickerOptionsFromAccept)(accept);\r\n  }, [accept]);\r\n  var onFileDialogOpenCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\r\n    return typeof onFileDialogOpen === \"function\" ? onFileDialogOpen : noop;\r\n  }, [onFileDialogOpen]);\r\n  var onFileDialogCancelCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\r\n    return typeof onFileDialogCancel === \"function\" ? onFileDialogCancel : noop;\r\n  }, [onFileDialogCancel]);\r\n  /**\r\n   * @constant\r\n   * @type {React.MutableRefObject<HTMLElement>}\r\n   */\r\n\r\n  var rootRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\r\n  var inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\r\n\r\n  var _useReducer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, initialState),\r\n      _useReducer2 = _slicedToArray(_useReducer, 2),\r\n      state = _useReducer2[0],\r\n      dispatch = _useReducer2[1];\r\n\r\n  var isFocused = state.isFocused,\r\n      isFileDialogActive = state.isFileDialogActive;\r\n  var fsAccessApiWorksRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(typeof window !== \"undefined\" && window.isSecureContext && useFsAccessApi && (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.canUseFileSystemAccessAPI)()); // Update file dialog active state when the window is focused on\r\n\r\n  var onWindowFocus = function onWindowFocus() {\r\n    // Execute the timeout only if the file dialog is opened in the browser\r\n    if (!fsAccessApiWorksRef.current && isFileDialogActive) {\r\n      setTimeout(function () {\r\n        if (inputRef.current) {\r\n          var files = inputRef.current.files;\r\n\r\n          if (!files.length) {\r\n            dispatch({\r\n              type: \"closeDialog\"\r\n            });\r\n            onFileDialogCancelCb();\r\n          }\r\n        }\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\r\n    window.addEventListener(\"focus\", onWindowFocus, false);\r\n    return function () {\r\n      window.removeEventListener(\"focus\", onWindowFocus, false);\r\n    };\r\n  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);\r\n  var dragTargetsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\r\n\r\n  var onDocumentDrop = function onDocumentDrop(event) {\r\n    if (rootRef.current && rootRef.current.contains(event.target)) {\r\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    dragTargetsRef.current = [];\r\n  };\r\n\r\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\r\n    if (preventDropOnDocument) {\r\n      document.addEventListener(\"dragover\", _utils_index_js__WEBPACK_IMPORTED_MODULE_2__.onDocumentDragOver, false);\r\n      document.addEventListener(\"drop\", onDocumentDrop, false);\r\n    }\r\n\r\n    return function () {\r\n      if (preventDropOnDocument) {\r\n        document.removeEventListener(\"dragover\", _utils_index_js__WEBPACK_IMPORTED_MODULE_2__.onDocumentDragOver);\r\n        document.removeEventListener(\"drop\", onDocumentDrop);\r\n      }\r\n    };\r\n  }, [rootRef, preventDropOnDocument]); // Auto focus the root when autoFocus is true\r\n\r\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\r\n    if (!disabled && autoFocus && rootRef.current) {\r\n      rootRef.current.focus();\r\n    }\r\n\r\n    return function () {};\r\n  }, [rootRef, autoFocus, disabled]);\r\n  var onErrCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (e) {\r\n    if (onError) {\r\n      onError(e);\r\n    } else {\r\n      // Let the user know something's gone wrong if they haven't provided the onError cb.\r\n      console.error(e);\r\n    }\r\n  }, [onError]);\r\n  var onDragEnterCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {\r\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\r\n\r\n    event.persist();\r\n    stopPropagation(event);\r\n    dragTargetsRef.current = [].concat(_toConsumableArray(dragTargetsRef.current), [event.target]);\r\n\r\n    if ((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.isEvtWithFiles)(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\r\n        if ((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.isPropagationStopped)(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        var fileCount = files.length;\r\n        var isDragAccept = fileCount > 0 && (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.allFilesAccepted)({\r\n          files: files,\r\n          accept: acceptAttr,\r\n          minSize: minSize,\r\n          maxSize: maxSize,\r\n          multiple: multiple,\r\n          maxFiles: maxFiles,\r\n          validator: validator\r\n        });\r\n        var isDragReject = fileCount > 0 && !isDragAccept;\r\n        dispatch({\r\n          isDragAccept: isDragAccept,\r\n          isDragReject: isDragReject,\r\n          isDragActive: true,\r\n          type: \"setDraggedFiles\"\r\n        });\r\n\r\n        if (onDragEnter) {\r\n          onDragEnter(event);\r\n        }\r\n      }).catch(function (e) {\r\n        return onErrCb(e);\r\n      });\r\n    }\r\n  }, [getFilesFromEvent, onDragEnter, onErrCb, noDragEventsBubbling, acceptAttr, minSize, maxSize, multiple, maxFiles, validator]);\r\n  var onDragOverCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {\r\n    event.preventDefault();\r\n    event.persist();\r\n    stopPropagation(event);\r\n    var hasFiles = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.isEvtWithFiles)(event);\r\n\r\n    if (hasFiles && event.dataTransfer) {\r\n      try {\r\n        event.dataTransfer.dropEffect = \"copy\";\r\n      } catch (_unused) {}\r\n      /* eslint-disable-line no-empty */\r\n\r\n    }\r\n\r\n    if (hasFiles && onDragOver) {\r\n      onDragOver(event);\r\n    }\r\n\r\n    return false;\r\n  }, [onDragOver, noDragEventsBubbling]);\r\n  var onDragLeaveCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {\r\n    event.preventDefault();\r\n    event.persist();\r\n    stopPropagation(event); // Only deactivate once the dropzone and all children have been left\r\n\r\n    var targets = dragTargetsRef.current.filter(function (target) {\r\n      return rootRef.current && rootRef.current.contains(target);\r\n    }); // Make sure to remove a target present multiple times only once\r\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\r\n\r\n    var targetIdx = targets.indexOf(event.target);\r\n\r\n    if (targetIdx !== -1) {\r\n      targets.splice(targetIdx, 1);\r\n    }\r\n\r\n    dragTargetsRef.current = targets;\r\n\r\n    if (targets.length > 0) {\r\n      return;\r\n    }\r\n\r\n    dispatch({\r\n      type: \"setDraggedFiles\",\r\n      isDragActive: false,\r\n      isDragAccept: false,\r\n      isDragReject: false\r\n    });\r\n\r\n    if ((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.isEvtWithFiles)(event) && onDragLeave) {\r\n      onDragLeave(event);\r\n    }\r\n  }, [rootRef, onDragLeave, noDragEventsBubbling]);\r\n  var setFiles = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (files, event) {\r\n    var acceptedFiles = [];\r\n    var fileRejections = [];\r\n    files.forEach(function (file) {\r\n      var _fileAccepted = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.fileAccepted)(file, acceptAttr),\r\n          _fileAccepted2 = _slicedToArray(_fileAccepted, 2),\r\n          accepted = _fileAccepted2[0],\r\n          acceptError = _fileAccepted2[1];\r\n\r\n      var _fileMatchSize = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.fileMatchSize)(file, minSize, maxSize),\r\n          _fileMatchSize2 = _slicedToArray(_fileMatchSize, 2),\r\n          sizeMatch = _fileMatchSize2[0],\r\n          sizeError = _fileMatchSize2[1];\r\n\r\n      var customErrors = validator ? validator(file) : null;\r\n\r\n      if (accepted && sizeMatch && !customErrors) {\r\n        acceptedFiles.push(file);\r\n      } else {\r\n        var errors = [acceptError, sizeError];\r\n\r\n        if (customErrors) {\r\n          errors = errors.concat(customErrors);\r\n        }\r\n\r\n        fileRejections.push({\r\n          file: file,\r\n          errors: errors.filter(function (e) {\r\n            return e;\r\n          })\r\n        });\r\n      }\r\n    });\r\n\r\n    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {\r\n      // Reject everything and empty accepted files\r\n      acceptedFiles.forEach(function (file) {\r\n        fileRejections.push({\r\n          file: file,\r\n          errors: [_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.TOO_MANY_FILES_REJECTION]\r\n        });\r\n      });\r\n      acceptedFiles.splice(0);\r\n    }\r\n\r\n    dispatch({\r\n      acceptedFiles: acceptedFiles,\r\n      fileRejections: fileRejections,\r\n      isDragReject: fileRejections.length > 0,\r\n      type: \"setFiles\"\r\n    });\r\n\r\n    if (onDrop) {\r\n      onDrop(acceptedFiles, fileRejections, event);\r\n    }\r\n\r\n    if (fileRejections.length > 0 && onDropRejected) {\r\n      onDropRejected(fileRejections, event);\r\n    }\r\n\r\n    if (acceptedFiles.length > 0 && onDropAccepted) {\r\n      onDropAccepted(acceptedFiles, event);\r\n    }\r\n  }, [dispatch, multiple, acceptAttr, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);\r\n  var onDropCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {\r\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\r\n\r\n    event.persist();\r\n    stopPropagation(event);\r\n    dragTargetsRef.current = [];\r\n\r\n    if ((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.isEvtWithFiles)(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\r\n        if ((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.isPropagationStopped)(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        setFiles(files, event);\r\n      }).catch(function (e) {\r\n        return onErrCb(e);\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"reset\"\r\n    });\r\n  }, [getFilesFromEvent, setFiles, onErrCb, noDragEventsBubbling]); // Fn for opening the file dialog programmatically\r\n\r\n  var openFileDialog = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\r\n    // No point to use FS access APIs if context is not secure\r\n    // https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts#feature_detection\r\n    if (fsAccessApiWorksRef.current) {\r\n      dispatch({\r\n        type: \"openDialog\"\r\n      });\r\n      onFileDialogOpenCb(); // https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\r\n\r\n      var opts = {\r\n        multiple: multiple,\r\n        types: pickerTypes\r\n      };\r\n      window.showOpenFilePicker(opts).then(function (handles) {\r\n        return getFilesFromEvent(handles);\r\n      }).then(function (files) {\r\n        setFiles(files, null);\r\n        dispatch({\r\n          type: \"closeDialog\"\r\n        });\r\n      }).catch(function (e) {\r\n        // AbortError means the user canceled\r\n        if ((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.isAbort)(e)) {\r\n          onFileDialogCancelCb(e);\r\n          dispatch({\r\n            type: \"closeDialog\"\r\n          });\r\n        } else if ((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.isSecurityError)(e)) {\r\n          fsAccessApiWorksRef.current = false; // CORS, so cannot use this API\r\n          // Try using the input\r\n\r\n          if (inputRef.current) {\r\n            inputRef.current.value = null;\r\n            inputRef.current.click();\r\n          } else {\r\n            onErrCb(new Error(\"Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided.\"));\r\n          }\r\n        } else {\r\n          onErrCb(e);\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (inputRef.current) {\r\n      dispatch({\r\n        type: \"openDialog\"\r\n      });\r\n      onFileDialogOpenCb();\r\n      inputRef.current.value = null;\r\n      inputRef.current.click();\r\n    }\r\n  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, onErrCb, pickerTypes, multiple]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\r\n\r\n  var onKeyDownCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {\r\n    // Ignore keyboard events bubbling up the DOM tree\r\n    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\r\n      return;\r\n    }\r\n\r\n    if (event.key === \" \" || event.key === \"Enter\" || event.keyCode === 32 || event.keyCode === 13) {\r\n      event.preventDefault();\r\n      openFileDialog();\r\n    }\r\n  }, [rootRef, openFileDialog]); // Update focus state for the dropzone\r\n\r\n  var onFocusCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\r\n    dispatch({\r\n      type: \"focus\"\r\n    });\r\n  }, []);\r\n  var onBlurCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\r\n    dispatch({\r\n      type: \"blur\"\r\n    });\r\n  }, []); // Cb to open the file dialog when click occurs on the dropzone\r\n\r\n  var onClickCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\r\n    if (noClick) {\r\n      return;\r\n    } // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\r\n    // to ensure React can handle state changes\r\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\r\n\r\n\r\n    if ((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.isIeOrEdge)()) {\r\n      setTimeout(openFileDialog, 0);\r\n    } else {\r\n      openFileDialog();\r\n    }\r\n  }, [noClick, openFileDialog]);\r\n\r\n  var composeHandler = function composeHandler(fn) {\r\n    return disabled ? null : fn;\r\n  };\r\n\r\n  var composeKeyboardHandler = function composeKeyboardHandler(fn) {\r\n    return noKeyboard ? null : composeHandler(fn);\r\n  };\r\n\r\n  var composeDragHandler = function composeDragHandler(fn) {\r\n    return noDrag ? null : composeHandler(fn);\r\n  };\r\n\r\n  var stopPropagation = function stopPropagation(event) {\r\n    if (noDragEventsBubbling) {\r\n      event.stopPropagation();\r\n    }\r\n  };\r\n\r\n  var getRootProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\r\n    return function () {\r\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\r\n          _ref2$refKey = _ref2.refKey,\r\n          refKey = _ref2$refKey === void 0 ? \"ref\" : _ref2$refKey,\r\n          role = _ref2.role,\r\n          onKeyDown = _ref2.onKeyDown,\r\n          onFocus = _ref2.onFocus,\r\n          onBlur = _ref2.onBlur,\r\n          onClick = _ref2.onClick,\r\n          onDragEnter = _ref2.onDragEnter,\r\n          onDragOver = _ref2.onDragOver,\r\n          onDragLeave = _ref2.onDragLeave,\r\n          onDrop = _ref2.onDrop,\r\n          rest = _objectWithoutProperties(_ref2, _excluded3);\r\n\r\n      return _objectSpread(_objectSpread(_defineProperty({\r\n        onKeyDown: composeKeyboardHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onKeyDown, onKeyDownCb)),\r\n        onFocus: composeKeyboardHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onFocus, onFocusCb)),\r\n        onBlur: composeKeyboardHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onBlur, onBlurCb)),\r\n        onClick: composeHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onClick, onClickCb)),\r\n        onDragEnter: composeDragHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onDragEnter, onDragEnterCb)),\r\n        onDragOver: composeDragHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onDragOver, onDragOverCb)),\r\n        onDragLeave: composeDragHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onDragLeave, onDragLeaveCb)),\r\n        onDrop: composeDragHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onDrop, onDropCb)),\r\n        role: typeof role === \"string\" && role !== \"\" ? role : \"presentation\"\r\n      }, refKey, rootRef), !disabled && !noKeyboard ? {\r\n        tabIndex: 0\r\n      } : {}), rest);\r\n    };\r\n  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);\r\n  var onInputElementClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (event) {\r\n    event.stopPropagation();\r\n  }, []);\r\n  var getInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\r\n    return function () {\r\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\r\n          _ref3$refKey = _ref3.refKey,\r\n          refKey = _ref3$refKey === void 0 ? \"ref\" : _ref3$refKey,\r\n          onChange = _ref3.onChange,\r\n          onClick = _ref3.onClick,\r\n          rest = _objectWithoutProperties(_ref3, _excluded4);\r\n\r\n      var inputProps = _defineProperty({\r\n        accept: acceptAttr,\r\n        multiple: multiple,\r\n        type: \"file\",\r\n        style: {\r\n          border: 0,\r\n          clip: \"rect(0, 0, 0, 0)\",\r\n          clipPath: \"inset(50%)\",\r\n          height: \"1px\",\r\n          margin: \"0 -1px -1px 0\",\r\n          overflow: \"hidden\",\r\n          padding: 0,\r\n          position: \"absolute\",\r\n          width: \"1px\",\r\n          whiteSpace: \"nowrap\"\r\n        },\r\n        onChange: composeHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onChange, onDropCb)),\r\n        onClick: composeHandler((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.composeEventHandlers)(onClick, onInputElementClick)),\r\n        tabIndex: -1\r\n      }, refKey, inputRef);\r\n\r\n      return _objectSpread(_objectSpread({}, inputProps), rest);\r\n    };\r\n  }, [inputRef, accept, multiple, onDropCb, disabled]);\r\n  return _objectSpread(_objectSpread({}, state), {}, {\r\n    isFocused: isFocused && !disabled,\r\n    getRootProps: getRootProps,\r\n    getInputProps: getInputProps,\r\n    rootRef: rootRef,\r\n    inputRef: inputRef,\r\n    open: composeHandler(openFileDialog)\r\n  });\r\n}\r\n/**\r\n * @param {DropzoneState} state\r\n * @param {{type: string} & DropzoneState} action\r\n * @returns {DropzoneState}\r\n */\r\n\r\nfunction reducer(state, action) {\r\n  /* istanbul ignore next */\r\n  switch (action.type) {\r\n    case \"focus\":\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        isFocused: true\r\n      });\r\n\r\n    case \"blur\":\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        isFocused: false\r\n      });\r\n\r\n    case \"openDialog\":\r\n      return _objectSpread(_objectSpread({}, initialState), {}, {\r\n        isFileDialogActive: true\r\n      });\r\n\r\n    case \"closeDialog\":\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        isFileDialogActive: false\r\n      });\r\n\r\n    case \"setDraggedFiles\":\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        isDragActive: action.isDragActive,\r\n        isDragAccept: action.isDragAccept,\r\n        isDragReject: action.isDragReject\r\n      });\r\n\r\n    case \"setFiles\":\r\n      return _objectSpread(_objectSpread({}, state), {}, {\r\n        acceptedFiles: action.acceptedFiles,\r\n        fileRejections: action.fileRejections,\r\n        isDragReject: action.isDragReject\r\n      });\r\n\r\n    case \"reset\":\r\n      return _objectSpread({}, initialState);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction noop() {}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-dropzone/dist/es/utils/index.js":
/*!************************************************************!*\
  !*** ./node_modules/react-dropzone/dist/es/utils/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorCode: () => (/* binding */ ErrorCode),\n/* harmony export */   FILE_INVALID_TYPE: () => (/* binding */ FILE_INVALID_TYPE),\n/* harmony export */   FILE_TOO_LARGE: () => (/* binding */ FILE_TOO_LARGE),\n/* harmony export */   FILE_TOO_SMALL: () => (/* binding */ FILE_TOO_SMALL),\n/* harmony export */   TOO_MANY_FILES: () => (/* binding */ TOO_MANY_FILES),\n/* harmony export */   TOO_MANY_FILES_REJECTION: () => (/* binding */ TOO_MANY_FILES_REJECTION),\n/* harmony export */   acceptPropAsAcceptAttr: () => (/* binding */ acceptPropAsAcceptAttr),\n/* harmony export */   allFilesAccepted: () => (/* binding */ allFilesAccepted),\n/* harmony export */   canUseFileSystemAccessAPI: () => (/* binding */ canUseFileSystemAccessAPI),\n/* harmony export */   composeEventHandlers: () => (/* binding */ composeEventHandlers),\n/* harmony export */   fileAccepted: () => (/* binding */ fileAccepted),\n/* harmony export */   fileMatchSize: () => (/* binding */ fileMatchSize),\n/* harmony export */   getInvalidTypeRejectionErr: () => (/* binding */ getInvalidTypeRejectionErr),\n/* harmony export */   getTooLargeRejectionErr: () => (/* binding */ getTooLargeRejectionErr),\n/* harmony export */   getTooSmallRejectionErr: () => (/* binding */ getTooSmallRejectionErr),\n/* harmony export */   isAbort: () => (/* binding */ isAbort),\n/* harmony export */   isEvtWithFiles: () => (/* binding */ isEvtWithFiles),\n/* harmony export */   isExt: () => (/* binding */ isExt),\n/* harmony export */   isIeOrEdge: () => (/* binding */ isIeOrEdge),\n/* harmony export */   isKindFile: () => (/* binding */ isKindFile),\n/* harmony export */   isMIMEType: () => (/* binding */ isMIMEType),\n/* harmony export */   isPropagationStopped: () => (/* binding */ isPropagationStopped),\n/* harmony export */   isSecurityError: () => (/* binding */ isSecurityError),\n/* harmony export */   onDocumentDragOver: () => (/* binding */ onDocumentDragOver),\n/* harmony export */   pickerOptionsFromAccept: () => (/* binding */ pickerOptionsFromAccept)\n/* harmony export */ });\n/* harmony import */ var attr_accept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! attr-accept */ \"(ssr)/./node_modules/attr-accept/dist/index.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\r\n\r\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\r\n\r\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\r\n\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\n\r\nvar accepts = typeof attr_accept__WEBPACK_IMPORTED_MODULE_0__ === \"function\" ? attr_accept__WEBPACK_IMPORTED_MODULE_0__ : attr_accept__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; // Error codes\r\n\r\nvar FILE_INVALID_TYPE = \"file-invalid-type\";\r\nvar FILE_TOO_LARGE = \"file-too-large\";\r\nvar FILE_TOO_SMALL = \"file-too-small\";\r\nvar TOO_MANY_FILES = \"too-many-files\";\r\nvar ErrorCode = {\r\n  FileInvalidType: FILE_INVALID_TYPE,\r\n  FileTooLarge: FILE_TOO_LARGE,\r\n  FileTooSmall: FILE_TOO_SMALL,\r\n  TooManyFiles: TOO_MANY_FILES\r\n};\r\n/**\r\n *\r\n * @param {string} accept\r\n */\r\n\r\nvar getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr() {\r\n  var accept = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\r\n  var acceptArr = accept.split(\",\");\r\n  var msg = acceptArr.length > 1 ? \"one of \".concat(acceptArr.join(\", \")) : acceptArr[0];\r\n  return {\r\n    code: FILE_INVALID_TYPE,\r\n    message: \"File type must be \".concat(msg)\r\n  };\r\n};\r\nvar getTooLargeRejectionErr = function getTooLargeRejectionErr(maxSize) {\r\n  return {\r\n    code: FILE_TOO_LARGE,\r\n    message: \"File is larger than \".concat(maxSize, \" \").concat(maxSize === 1 ? \"byte\" : \"bytes\")\r\n  };\r\n};\r\nvar getTooSmallRejectionErr = function getTooSmallRejectionErr(minSize) {\r\n  return {\r\n    code: FILE_TOO_SMALL,\r\n    message: \"File is smaller than \".concat(minSize, \" \").concat(minSize === 1 ? \"byte\" : \"bytes\")\r\n  };\r\n};\r\nvar TOO_MANY_FILES_REJECTION = {\r\n  code: TOO_MANY_FILES,\r\n  message: \"Too many files\"\r\n};\r\n/**\r\n * Check if file is accepted.\r\n *\r\n * Firefox versions prior to 53 return a bogus MIME type for every file drag,\r\n * so dragovers with that MIME type will always be accepted.\r\n *\r\n * @param {File} file\r\n * @param {string} accept\r\n * @returns\r\n */\r\n\r\nfunction fileAccepted(file, accept) {\r\n  var isAcceptable = file.type === \"application/x-moz-file\" || accepts(file, accept);\r\n  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];\r\n}\r\nfunction fileMatchSize(file, minSize, maxSize) {\r\n  if (isDefined(file.size)) {\r\n    if (isDefined(minSize) && isDefined(maxSize)) {\r\n      if (file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];\r\n      if (file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];\r\n    } else if (isDefined(minSize) && file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];else if (isDefined(maxSize) && file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];\r\n  }\r\n\r\n  return [true, null];\r\n}\r\n\r\nfunction isDefined(value) {\r\n  return value !== undefined && value !== null;\r\n}\r\n/**\r\n *\r\n * @param {object} options\r\n * @param {File[]} options.files\r\n * @param {string} [options.accept]\r\n * @param {number} [options.minSize]\r\n * @param {number} [options.maxSize]\r\n * @param {boolean} [options.multiple]\r\n * @param {number} [options.maxFiles]\r\n * @param {(f: File) => FileError|FileError[]|null} [options.validator]\r\n * @returns\r\n */\r\n\r\n\r\nfunction allFilesAccepted(_ref) {\r\n  var files = _ref.files,\r\n      accept = _ref.accept,\r\n      minSize = _ref.minSize,\r\n      maxSize = _ref.maxSize,\r\n      multiple = _ref.multiple,\r\n      maxFiles = _ref.maxFiles,\r\n      validator = _ref.validator;\r\n\r\n  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {\r\n    return false;\r\n  }\r\n\r\n  return files.every(function (file) {\r\n    var _fileAccepted = fileAccepted(file, accept),\r\n        _fileAccepted2 = _slicedToArray(_fileAccepted, 1),\r\n        accepted = _fileAccepted2[0];\r\n\r\n    var _fileMatchSize = fileMatchSize(file, minSize, maxSize),\r\n        _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1),\r\n        sizeMatch = _fileMatchSize2[0];\r\n\r\n    var customErrors = validator ? validator(file) : null;\r\n    return accepted && sizeMatch && !customErrors;\r\n  });\r\n} // React's synthetic events has event.isPropagationStopped,\r\n// but to remain compatibility with other libs (Preact) fall back\r\n// to check event.cancelBubble\r\n\r\nfunction isPropagationStopped(event) {\r\n  if (typeof event.isPropagationStopped === \"function\") {\r\n    return event.isPropagationStopped();\r\n  } else if (typeof event.cancelBubble !== \"undefined\") {\r\n    return event.cancelBubble;\r\n  }\r\n\r\n  return false;\r\n}\r\nfunction isEvtWithFiles(event) {\r\n  if (!event.dataTransfer) {\r\n    return !!event.target && !!event.target.files;\r\n  } // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\r\n\r\n\r\n  return Array.prototype.some.call(event.dataTransfer.types, function (type) {\r\n    return type === \"Files\" || type === \"application/x-moz-file\";\r\n  });\r\n}\r\nfunction isKindFile(item) {\r\n  return _typeof(item) === \"object\" && item !== null && item.kind === \"file\";\r\n} // allow the entire document to be a drag target\r\n\r\nfunction onDocumentDragOver(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nfunction isIe(userAgent) {\r\n  return userAgent.indexOf(\"MSIE\") !== -1 || userAgent.indexOf(\"Trident/\") !== -1;\r\n}\r\n\r\nfunction isEdge(userAgent) {\r\n  return userAgent.indexOf(\"Edge/\") !== -1;\r\n}\r\n\r\nfunction isIeOrEdge() {\r\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;\r\n  return isIe(userAgent) || isEdge(userAgent);\r\n}\r\n/**\r\n * This is intended to be used to compose event handlers\r\n * They are executed in order until one of them calls `event.isPropagationStopped()`.\r\n * Note that the check is done on the first invoke too,\r\n * meaning that if propagation was stopped before invoking the fns,\r\n * no handlers will be executed.\r\n *\r\n * @param {Function} fns the event hanlder functions\r\n * @return {Function} the event handler to add to an element\r\n */\r\n\r\nfunction composeEventHandlers() {\r\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    fns[_key] = arguments[_key];\r\n  }\r\n\r\n  return function (event) {\r\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n      args[_key2 - 1] = arguments[_key2];\r\n    }\r\n\r\n    return fns.some(function (fn) {\r\n      if (!isPropagationStopped(event) && fn) {\r\n        fn.apply(void 0, [event].concat(args));\r\n      }\r\n\r\n      return isPropagationStopped(event);\r\n    });\r\n  };\r\n}\r\n/**\r\n * canUseFileSystemAccessAPI checks if the [File System Access API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API)\r\n * is supported by the browser.\r\n * @returns {boolean}\r\n */\r\n\r\nfunction canUseFileSystemAccessAPI() {\r\n  return \"showOpenFilePicker\" in window;\r\n}\r\n/**\r\n * Convert the `{accept}` dropzone prop to the\r\n * `{types}` option for https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\r\n *\r\n * @param {AcceptProp} accept\r\n * @returns {{accept: string[]}[]}\r\n */\r\n\r\nfunction pickerOptionsFromAccept(accept) {\r\n  if (isDefined(accept)) {\r\n    var acceptForPicker = Object.entries(accept).filter(function (_ref2) {\r\n      var _ref3 = _slicedToArray(_ref2, 2),\r\n          mimeType = _ref3[0],\r\n          ext = _ref3[1];\r\n\r\n      var ok = true;\r\n\r\n      if (!isMIMEType(mimeType)) {\r\n        console.warn(\"Skipped \\\"\".concat(mimeType, \"\\\" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.\"));\r\n        ok = false;\r\n      }\r\n\r\n      if (!Array.isArray(ext) || !ext.every(isExt)) {\r\n        console.warn(\"Skipped \\\"\".concat(mimeType, \"\\\" because an invalid file extension was provided.\"));\r\n        ok = false;\r\n      }\r\n\r\n      return ok;\r\n    }).reduce(function (agg, _ref4) {\r\n      var _ref5 = _slicedToArray(_ref4, 2),\r\n          mimeType = _ref5[0],\r\n          ext = _ref5[1];\r\n\r\n      return _objectSpread(_objectSpread({}, agg), {}, _defineProperty({}, mimeType, ext));\r\n    }, {});\r\n    return [{\r\n      // description is required due to https://crbug.com/1264708\r\n      description: \"Files\",\r\n      accept: acceptForPicker\r\n    }];\r\n  }\r\n\r\n  return accept;\r\n}\r\n/**\r\n * Convert the `{accept}` dropzone prop to an array of MIME types/extensions.\r\n * @param {AcceptProp} accept\r\n * @returns {string}\r\n */\r\n\r\nfunction acceptPropAsAcceptAttr(accept) {\r\n  if (isDefined(accept)) {\r\n    return Object.entries(accept).reduce(function (a, _ref6) {\r\n      var _ref7 = _slicedToArray(_ref6, 2),\r\n          mimeType = _ref7[0],\r\n          ext = _ref7[1];\r\n\r\n      return [].concat(_toConsumableArray(a), [mimeType], _toConsumableArray(ext));\r\n    }, []) // Silently discard invalid entries as pickerOptionsFromAccept warns about these\r\n    .filter(function (v) {\r\n      return isMIMEType(v) || isExt(v);\r\n    }).join(\",\");\r\n  }\r\n\r\n  return undefined;\r\n}\r\n/**\r\n * Check if v is an exception caused by aborting a request (e.g window.showOpenFilePicker()).\r\n *\r\n * See https://developer.mozilla.org/en-US/docs/Web/API/DOMException.\r\n * @param {any} v\r\n * @returns {boolean} True if v is an abort exception.\r\n */\r\n\r\nfunction isAbort(v) {\r\n  return v instanceof DOMException && (v.name === \"AbortError\" || v.code === v.ABORT_ERR);\r\n}\r\n/**\r\n * Check if v is a security error.\r\n *\r\n * See https://developer.mozilla.org/en-US/docs/Web/API/DOMException.\r\n * @param {any} v\r\n * @returns {boolean} True if v is a security error.\r\n */\r\n\r\nfunction isSecurityError(v) {\r\n  return v instanceof DOMException && (v.name === \"SecurityError\" || v.code === v.SECURITY_ERR);\r\n}\r\n/**\r\n * Check if v is a MIME type string.\r\n *\r\n * See accepted format: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers.\r\n *\r\n * @param {string} v\r\n */\r\n\r\nfunction isMIMEType(v) {\r\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || v === \"application/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\r\n}\r\n/**\r\n * Check if v is a file extension.\r\n * @param {string} v\r\n */\r\n\r\nfunction isExt(v) {\r\n  return /^.*\\.[\\w]+$/.test(v);\r\n}\r\n/**\r\n * @typedef {Object.<string, string[]>} AcceptProp\r\n */\r\n\r\n/**\r\n * @typedef {object} FileError\r\n * @property {string} message\r\n * @property {ErrorCode|string} code\r\n */\r\n\r\n/**\r\n * @typedef {\"file-invalid-type\"|\"file-too-large\"|\"file-too-small\"|\"too-many-files\"} ErrorCode\r\n *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone/dist/es/utils/index.js\n");

/***/ })

};
;